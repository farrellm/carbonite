{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "com.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            },
            "classPath": "/usr/lib/jvm/java-7-openjdk/lib/tools.jar\n/home/mfarrell/workspace/carbonite/target/carbonite-0.1.0-SNAPSHOT-standalone.jar"
        }
    ],
    "cells": [
        {
            "id": "coderIfMox",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "import carbonite.CarboniteWriter",
                    "",
                    "def foo = {it + it}",
                    "",
                    "File objectStore = new File('objectStore.ser')",
                    "if (objectStore.exists()) { objectStore.delete() }",
                    "",
                    "objectStore.withObjectOutputStream {os->",
                    "  def co = new CarboniteWriter(os)",
                    "",
                    "  co.writeObject(foo.dehydrate())",
                    "}",
                    "",
                    "carbonite.BytecodeSeer.getInstance().getBytecode(foo.class)"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "elapsedTime": 574,
                "pluginName": "Groovy",
                "shellId": "1836b25a-fb9e-4d52-bc1a-73e558ab0946"
            },
            "evaluatorReader": true,
            "lineCount": 14
        },
        {
            "id": "codenKqMbL",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "import carbonite.CarboniteClassLoader",
                    "import carbonite.CarboniteReader",
                    "",
                    "File objectStore = new File('objectStore.ser')",
                    "def cl = new CarboniteClassLoader(this.class.classLoader)",
                    "",
                    "objectStore.withObjectInputStream(cl) {is->",
                    "  def ci = new CarboniteReader(is, cl)",
                    "",
                    "  ci.readObject()(8)",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay",
                "elapsedTime": 1429,
                "pluginName": "Groovy",
                "shellId": "18802b5e-40da-436b-b65a-129b270c4c31"
            },
            "evaluatorReader": true,
            "lineCount": 11
        }
    ]
}
